# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-17 02:59
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_to', models.DateTimeField(blank=True, null=True)),
                ('app_type', models.IntegerField(choices=[(1, 'Permit'), (2, 'Licence/permit'), (3, 'Part 5'), (4, 'Emergency works')])),
                ('state', models.CharField(default='draft', editable=False, max_length=64)),
                ('title', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, null=True)),
                ('submit_date', models.DateField()),
                ('proposed_commence', models.DateField(blank=True, null=True)),
                ('proposed_end', models.DateField(blank=True, null=True)),
                ('cost', models.CharField(blank=True, max_length=256, null=True)),
                ('project_no', models.CharField(blank=True, max_length=256, null=True)),
                ('related_permits', models.TextField(blank=True, null=True)),
                ('over_water', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_to', models.DateTimeField(blank=True, null=True)),
                ('condition', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Proposed'), (2, 'Applied'), (3, 'Cancelled')], default=1)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.Application')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_to', models.DateTimeField(blank=True, null=True)),
                ('lot', models.CharField(blank=True, max_length=256, null=True)),
                ('reserve', models.CharField(blank=True, max_length=256, null=True)),
                ('suburb', models.CharField(blank=True, max_length=256, null=True)),
                ('intersection', models.CharField(blank=True, max_length=256, null=True)),
                ('lga', models.CharField(blank=True, max_length=256, null=True)),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.Application')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_to', models.DateTimeField(blank=True, null=True)),
                ('task_type', models.IntegerField(choices=[(1, 'Assess an application'), (2, 'Refer an application for comment')])),
                ('status', models.IntegerField(choices=[(1, 'Ongoing'), (2, 'Complete')])),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.Application')),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
